DELIMITER $$

CREATE TABLE `BASELONGSTRINGS` (
  `ID` BIGINT(20) UNSIGNED NOT NULL,
  `SITEID` INT(10) UNSIGNED NOT NULL,
  `PAGEID` BIGINT(20) UNSIGNED DEFAULT NULL,
  `TEXT` TEXT NOT NULL,
  `TYPE` SMALLINT(6) DEFAULT '0',
  PRIMARY KEY (`ID`,`SITEID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `BASESTRINGS` (
  `ID` BIGINT(20) UNSIGNED NOT NULL,
  `SITEID` INT(10) UNSIGNED NOT NULL,
  `PAGEID` BIGINT(20) UNSIGNED DEFAULT NULL,
  `TEXT` VARCHAR(255) NOT NULL,
  `TYPE` SMALLINT(6) DEFAULT '0',
  PRIMARY KEY (`ID`,`SITEID`),
  UNIQUE KEY `TEXT` (`SITEID`,`PAGEID`,`TYPE`,`TEXT`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `IDENTIFIERS` (
  `CONTEXTID` INT(10) UNSIGNED NOT NULL,
  `OWNERID` INT(10) UNSIGNED NOT NULL,
  `LATESTID` INT(10) UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`CONTEXTID`,`OWNERID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `PAGELONGSTRINGS` (
  `PAGEID` BIGINT(20) UNSIGNED NOT NULL,
  `STRINGID` BIGINT(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`PAGEID`,`STRINGID`),
  KEY `LSTRING` (`STRINGID`),
  KEY `LPAGE` (`PAGEID`),
  CONSTRAINT `LPAGE` FOREIGN KEY (`PAGEID`) REFERENCES `PAGES` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `LSTRING` FOREIGN KEY (`STRINGID`) REFERENCES `BASELONGSTRINGS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `PAGES` (
  `ID` BIGINT(20) UNSIGNED NOT NULL,
  `PAGE` VARCHAR(256) DEFAULT NULL,
  `SITEID` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `PAGE` (`PAGE`(255),`SITEID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `PAGESTRINGS` (
  `PAGEID` BIGINT(20) UNSIGNED NOT NULL,
  `STRINGID` BIGINT(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`PAGEID`,`STRINGID`),
  KEY `STRING` (`STRINGID`),
  KEY `PAGE` (`PAGEID`),
  CONSTRAINT `PAGE` FOREIGN KEY (`PAGEID`) REFERENCES `PAGES` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `STRING` FOREIGN KEY (`STRINGID`) REFERENCES `BASESTRINGS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `SCANNEDSITE` (
  `HOST` VARCHAR(256) NOT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `SITES` (
  `HOST` CHAR(75) NOT NULL,
  `ID` INT(11) UNSIGNED NOT NULL,
  `USERID` INT(11) NOT NULL,
  `ANCHOR` CHAR(1) NOT NULL,
  `BASELOCALE` CHAR(8) NOT NULL,
  `OFFSET` INT(11) NOT NULL,
  `TOP` INT(11) NOT NULL,
  `TRANSLATIONVERSION` INT(11) DEFAULT '0',
  PRIMARY KEY (`ID`,`HOST`,`USERID`),
  UNIQUE KEY `DOMAIN_UNIQUE` (`HOST`),
  KEY `USER` (`USERID`),
  CONSTRAINT `USER` FOREIGN KEY (`USERID`) REFERENCES `USERS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `STRINGSTATISTICS` (
  `STRINGLEN` INT(11) NOT NULL,
  `STRINGCOUNT` INT(11) DEFAULT NULL,
  PRIMARY KEY (`STRINGLEN`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `TARGETLOCALES` (
  `SITEID` INT(10) UNSIGNED NOT NULL,
  `LOCALE` CHAR(8) NOT NULL,
  PRIMARY KEY (`SITEID`,`LOCALE`),
  KEY `FK_SITE` (`SITEID`),
  CONSTRAINT `FK_SITE` FOREIGN KEY (`SITEID`) REFERENCES `SITES` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `TARGETLONGSTRINGS` (
  `LOCALE` CHAR(8) NOT NULL,
  `BASEID` BIGINT(20) UNSIGNED NOT NULL,
  `TEXT` TEXT NOT NULL,
  PRIMARY KEY (`LOCALE`,`BASEID`),
  KEY `BASELONGSTRING` (`BASEID`),
  CONSTRAINT `BASELONGSTRING` FOREIGN KEY (`BASEID`) REFERENCES `BASELONGSTRINGS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `TARGETSTRINGS` (
  `LOCALE` CHAR(8) NOT NULL,
  `BASEID` BIGINT(20) UNSIGNED NOT NULL,
  `TEXT` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`LOCALE`,`BASEID`),
  KEY `BASESTRING` (`BASEID`),
  CONSTRAINT `BASESTRING` FOREIGN KEY (`BASEID`) REFERENCES `BASESTRINGS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `USERS` (
  `ID` INT(11) NOT NULL,
  `MAIL` VARCHAR(255) NOT NULL DEFAULT '',
  `NAME` VARCHAR(255) DEFAULT NULL,
  `SURNAME` VARCHAR(255) DEFAULT NULL,
  `COMPANY` VARCHAR(255) DEFAULT NULL,
  `PASSWORD` CHAR(32) DEFAULT NULL,
  `ADDRESS` VARCHAR(255) DEFAULT NULL,
  `CITY` VARCHAR(255) DEFAULT NULL,
  `COUNTRY` VARCHAR(255) DEFAULT NULL,
  `ZIP` VARCHAR(25) DEFAULT NULL,
  `TYPE` TINYINT(4) DEFAULT NULL,
  `ACTIVE` BIT(1) DEFAULT NULL,
  `BIRTHDATE` DATE DEFAULT NULL,
  `GENDER` TINYINT(4) DEFAULT NULL,
  `TAXCODE` VARCHAR(25) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


DELIMITER $$

CREATE TABLE `VALIDATIONKEYS` (
  `USERID` INT(11) NOT NULL,
  `VALIDATIONKEY` CHAR(36) NOT NULL,
  `DATECREATED` DATETIME DEFAULT NULL,
  PRIMARY KEY (`USERID`),
  CONSTRAINT `FK_USER` FOREIGN KEY (`USERID`) REFERENCES `USERS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8$$


delimiter $$

CREATE DEFINER=`root`@`localhost` PROCEDURE `adjust_pages_id`(_site_id int unsigned)
BEGIN
declare _ownerId int unsigned;
set _ownerid = 0;

START TRANSACTION;  
update identifiers set latestid = 
        (select max(id) from pages where siteid = _site_id) & 0x0000FFFF
            where ownerid = _ownerid and contextid=_site_id;
update pages a set a.id = (_site_id << 32) + next_id(_site_id, _ownerid) where a.siteid =_site_id;
update identifiers set latestid = 0 where ownerid = _ownerid and contextid =_site_id;
update pages a set a.id = (_site_id << 32) + next_id(_site_id, _ownerid) where a.siteid =_site_id;
COMMIT;
END$$


delimiter $$

CREATE DEFINER=`root`@`localhost` PROCEDURE `adjust_strings_id`(_site_id int unsigned)
BEGIN
declare _ownerId int unsigned;

set _ownerId = 1;
START TRANSACTION;
update identifiers set latestid = (select max(id) from basestrings where siteid = _site_id) & 0x0000FFFF 
    where ownerid = _ownerId and contextid=_site_id;
update basestrings a set a.id = (_site_id << 32) + next_id(_site_id, _ownerId) where a.siteid=_site_id;
update identifiers set latestid = 0 where ownerid = _ownerId and contextid=_site_id;
update basestrings a set a.id = (_site_id << 32) + next_id(_site_id, _ownerId) where a.siteid=_site_id;

set _ownerId = 2;

update identifiers set latestid = (select max(id) from baselongstrings where siteid = _site_id) & 0x0000FFFF 
    where ownerid = _ownerId and contextid=_site_id;
update baselongstrings a set a.id = (_site_id << 32) + next_id(_site_id, _ownerId) where a.siteid=_site_id;
update identifiers set latestid = 0 where ownerid = _ownerId and contextid=_site_id;
update baselongstrings a set a.id = (_site_id << 32) + next_id(_site_id, _ownerId) where a.siteid=_site_id;
COMMIT;
END$$


delimiter $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `next_id`(_CONTEXTID BIGINT, _OWNERID INT(10))
BEGIN
    UPDATE IDENTIFIERS SET LATESTID = LAST_INSERT_ID(LATESTID + 1) WHERE CONTEXTID=_CONTEXTID AND OWNERID=_OWNERID;
    if ROW_COUNT() = 1 THEN 
        SELECT LAST_INSERT_ID();    
    END IF; 
END$$


